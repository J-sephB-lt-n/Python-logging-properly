version: 1
disable_existing_loggers: false

filters:
  only_if_dev:
    "()": src.logging_utils.filters.OnlyIfDev

formatters:
  simple:
    format: "%(levelname)s :: %(message)s"
  json_fmt_keys: &json_fmt_keys
    fmt_keys:
      # https://docs.python.org/3/library/logging.html#logrecord-attributes
      level: levelname
      message: message
      timestamp: timestamp
      logger_name: name
      module: module
      function: funcName
      line_num: lineno
      # thread_name: threadName
      # asyncio_task_name: taskName
      # exc_info: exc_info  # these are moved into the message by QueueHandler
      # stack_info: stack_info # these are moved into the message by QueueHandler
  json:
    "()": src.logging_utils.JsonLogFormatter
    <<: *json_fmt_keys
    colourise: false
    indent: false
  json_pretty:
    "()": src.logging_utils.JsonLogFormatter
    <<: *json_fmt_keys
    colourise: true
    indent: true

handlers:
  stdout:
    class: logging.StreamHandler
    level: INFO
    formatter: json_pretty
    stream: ext://sys.stdout
  # stderr:
  #   class: logging.StreamHandler
  #   level: WARNING
  #   formatter: json
  #   stream: ext://sys.stdout
  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    filters:
      - only_if_dev
    formatter: json
    filename: logs/app_logs.jsonl
    maxBytes: 5242880 # 5Mb
    backupCount: 10
  queue_handler:
    class: logging.handlers.QueueHandler
    handlers:
      - stdout
      # - stderr
      - file
    respect_handler_level: true
loggers:
  root:
    level: DEBUG
    handlers:
      # - stdout
      # - file
      - queue_handler
